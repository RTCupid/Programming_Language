
200
count of char = 200

my_main ()
{
    first_argument = 1;

    Function (first_argument);

    then_commit_seppuku
};

Function (arg)
{
    arg = arg + 1000;

    write_about {arg};

    return 0;
};

then_commit_seppuku

sizeOfFile = <200>


Start Tokenizer:

----------------------------------------------------------------
Dump Keywords:
add                              1
+                                1
subtract                         2
-                                2
multiply                         3
*                                3
divide                           4
/                                4
next                             5
;                                5
assign                           6
=                                6
pong                             7
if                               7
then_commit_seppuku              12
$                                12
if_happens                       7
(                                14
)                                13
{                                15
}                                16
write_about                      17
print                            17
input                            18
sqrt                             19
>                                20
<                                21
while                            8
call                             24
def                              22
func                             23
return                           25
give                             25

----------------------------------------------------------------
End Dump!

first symbol = <m> is alpha
name = <my_main>
number_key = <-1>
number_id = <-1>
first symbol = <(> is alpha
name = <(>
<(> is keyword
number_key = <17>

first symbol = <)> is alpha
name = <)>
<)> is keyword
number_key = <18>

first symbol = <{> is alpha
name = <{>
<{> is keyword
number_key = <19>

first symbol = <f> is alpha
name = <first_argument>
number_key = <-1>
number_id = <-1>
first symbol = <=> is alpha
name = <=>
<=> is keyword
number_key = <11>

first symbol = '1' is number
number is <1>

first symbol = <;> is alpha
name = <;>
<;> is keyword
number_key = <9>

first symbol = <F> is alpha
name = <Function>
number_key = <-1>
number_id = <-1>
first symbol = <(> is alpha
name = <(>
<(> is keyword
number_key = <17>

first symbol = <f> is alpha
name = <first_argument>
number_key = <-1>
<first_argument> is identificator
number_id = <1>
first symbol = <)> is alpha
name = <)>
<)> is keyword
number_key = <18>

first symbol = <;> is alpha
name = <;>
<;> is keyword
number_key = <9>

first symbol = <t> is alpha
name = <then_commit_seppuku>
<then_commit_seppuku> is keyword
number_key = <14>

first symbol = <}> is alpha
name = <}>
<}> is keyword
number_key = <20>

first symbol = <;> is alpha
name = <;>
<;> is keyword
number_key = <9>

first symbol = <F> is alpha
name = <Function>
number_key = <-1>
<Function> is identificator
number_id = <2>
first symbol = <(> is alpha
name = <(>
<(> is keyword
number_key = <17>

first symbol = <a> is alpha
name = <arg>
number_key = <-1>
number_id = <-1>
first symbol = <)> is alpha
name = <)>
<)> is keyword
number_key = <18>

first symbol = <{> is alpha
name = <{>
<{> is keyword
number_key = <19>

first symbol = <a> is alpha
name = <arg>
number_key = <-1>
<arg> is identificator
number_id = <3>
first symbol = <=> is alpha
name = <=>
<=> is keyword
number_key = <11>

first symbol = <a> is alpha
name = <arg>
number_key = <-1>
<arg> is identificator
number_id = <3>
first symbol = <+> is alpha
name = <+>
<+> is keyword
number_key = <1>

first symbol = '1' is number
number is <1000>

first symbol = <;> is alpha
name = <;>
<;> is keyword
number_key = <9>

first symbol = <w> is alpha
name = <write_about>
<write_about> is keyword
number_key = <21>

first symbol = <{> is alpha
name = <{>
<{> is keyword
number_key = <19>

first symbol = <a> is alpha
name = <arg>
number_key = <-1>
<arg> is identificator
number_id = <3>
first symbol = <}> is alpha
name = <}>
<}> is keyword
number_key = <20>

first symbol = <;> is alpha
name = <;>
<;> is keyword
number_key = <9>

first symbol = <r> is alpha
name = <return>
<return> is keyword
number_key = <31>

first symbol = '0' is number
number is <0>

first symbol = <;> is alpha
name = <;>
<;> is keyword
number_key = <9>

first symbol = <}> is alpha
name = <}>
<}> is keyword
number_key = <20>

first symbol = <;> is alpha
name = <;>
<;> is keyword
number_key = <9>

first symbol = <t> is alpha
name = <then_commit_seppuku>
<then_commit_seppuku> is keyword
number_key = <14>

----------------------------------------------------------------
Dump Tokens:
ID my_main
OP (
OP )
OP {
ID first_argument
OP =
NUM 1
OP ;
ID Function
OP (
ID first_argument
OP )
OP ;
OP $
OP }
OP ;
ID Function
OP (
ID arg
OP )
OP {
ID arg
OP =
ID arg
OP +
NUM 1000
OP ;
OP print
OP {
ID arg
OP }
OP ;
OP return
NUM 0
OP ;
OP }
OP ;
OP $
Tokenizer completed!

