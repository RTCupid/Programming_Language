
414
count of char = 414

a = 7 next
b = 12 next
c = 4 next

ntimes = 100000000 next

while (ntimes > 1)
{
    Discriminant = b multiply b subtract 4 multiply a multiply c next

    first_answ  = ((0 subtract 1) multiply b subtract sqrt (Discriminant)) divide (2 multiply a)next
    second_answ = ((0 subtract 1) multiply b add      sqrt (Discriminant)) divide (2 multiply a) next

    ntimes = ntimes - 1 next
} next

then_commit_seppuku


sizeOfFile = <414>


Start Tokenizer:

----------------------------------------------------------------
Dump Keywords:
add                              1
+                                1
subtract                         2
-                                2
multiply                         3
*                                3
divide                           4
/                                4
next                             5
;                                5
assign                           6
=                                6
pong                             7
if                               7
then_commit_seppuku              12
$                                12
if_happens                       7
(                                14
)                                13
{                                15
}                                16
write_about                      17
print                            17
input                            18
sqrt                             19
>                                20
<                                21
while                            8
call                             24
def                              22
func                             23
return                           25
give                             25

----------------------------------------------------------------
End Dump!

first symbol = <a> is alpha
name = <a>
number_key = <-1>
number_id = <-1>
first symbol = <=> is alpha
name = <=>
<=> is keyword
number_key = <11>

first symbol = '7' is number
number is <7>

first symbol = <n> is alpha
name = <next>
<next> is keyword
number_key = <8>

first symbol = <b> is alpha
name = <b>
number_key = <-1>
number_id = <-1>
first symbol = <=> is alpha
name = <=>
<=> is keyword
number_key = <11>

first symbol = '1' is number
number is <12>

first symbol = <n> is alpha
name = <next>
<next> is keyword
number_key = <8>

first symbol = <c> is alpha
name = <c>
number_key = <-1>
number_id = <-1>
first symbol = <=> is alpha
name = <=>
<=> is keyword
number_key = <11>

first symbol = '4' is number
number is <4>

first symbol = <n> is alpha
name = <next>
<next> is keyword
number_key = <8>

first symbol = <n> is alpha
name = <ntimes>
number_key = <-1>
number_id = <-1>
first symbol = <=> is alpha
name = <=>
<=> is keyword
number_key = <11>

first symbol = '1' is number
number is <1e+08>

first symbol = <n> is alpha
name = <next>
<next> is keyword
number_key = <8>

first symbol = <w> is alpha
name = <while>
<while> is keyword
number_key = <27>

first symbol = <(> is alpha
name = <(>
<(> is keyword
number_key = <17>

first symbol = <n> is alpha
name = <ntimes>
number_key = <-1>
<ntimes> is identificator
number_id = <3>
first symbol = <>> is alpha
name = <>>
<>> is keyword
number_key = <25>

first symbol = '1' is number
number is <1>

first symbol = <)> is alpha
name = <)>
<)> is keyword
number_key = <18>

first symbol = <{> is alpha
name = <{>
<{> is keyword
number_key = <19>

first symbol = <D> is alpha
name = <Discriminant>
number_key = <-1>
number_id = <-1>
first symbol = <=> is alpha
name = <=>
<=> is keyword
number_key = <11>

first symbol = <b> is alpha
name = <b>
number_key = <-1>
<b> is identificator
number_id = <1>
first symbol = <m> is alpha
name = <multiply>
<multiply> is keyword
number_key = <4>

first symbol = <b> is alpha
name = <b>
number_key = <-1>
<b> is identificator
number_id = <1>
first symbol = <s> is alpha
name = <subtract>
<subtract> is keyword
number_key = <2>

first symbol = '4' is number
number is <4>

first symbol = <m> is alpha
name = <multiply>
<multiply> is keyword
number_key = <4>

first symbol = <a> is alpha
name = <a>
number_key = <-1>
<a> is identificator
number_id = <0>
first symbol = <m> is alpha
name = <multiply>
<multiply> is keyword
number_key = <4>

first symbol = <c> is alpha
name = <c>
number_key = <-1>
<c> is identificator
number_id = <2>
first symbol = <n> is alpha
name = <next>
<next> is keyword
number_key = <8>

first symbol = <f> is alpha
name = <first_answ>
number_key = <-1>
number_id = <-1>
first symbol = <=> is alpha
name = <=>
<=> is keyword
number_key = <11>

first symbol = <(> is alpha
name = <(>
<(> is keyword
number_key = <17>

first symbol = <(> is alpha
name = <(>
<(> is keyword
number_key = <17>

first symbol = '0' is number
number is <0>

first symbol = <s> is alpha
name = <subtract>
<subtract> is keyword
number_key = <2>

first symbol = '1' is number
number is <1>

first symbol = <)> is alpha
name = <)>
<)> is keyword
number_key = <18>

first symbol = <m> is alpha
name = <multiply>
<multiply> is keyword
number_key = <4>

first symbol = <b> is alpha
name = <b>
number_key = <-1>
<b> is identificator
number_id = <1>
first symbol = <s> is alpha
name = <subtract>
<subtract> is keyword
number_key = <2>

first symbol = <s> is alpha
name = <sqrt>
<sqrt> is keyword
number_key = <24>

first symbol = <(> is alpha
name = <(>
<(> is keyword
number_key = <17>

first symbol = <D> is alpha
name = <Discriminant>
number_key = <-1>
<Discriminant> is identificator
number_id = <4>
first symbol = <)> is alpha
name = <)>
<)> is keyword
number_key = <18>

first symbol = <)> is alpha
name = <)>
<)> is keyword
number_key = <18>

first symbol = <d> is alpha
name = <divide>
<divide> is keyword
number_key = <6>

first symbol = <(> is alpha
name = <(>
<(> is keyword
number_key = <17>

first symbol = '2' is number
number is <2>

first symbol = <m> is alpha
name = <multiply>
<multiply> is keyword
number_key = <4>

first symbol = <a> is alpha
name = <a>
number_key = <-1>
<a> is identificator
number_id = <0>
first symbol = <)> is alpha
name = <)>
<)> is keyword
number_key = <18>

first symbol = <n> is alpha
name = <next>
<next> is keyword
number_key = <8>

first symbol = <s> is alpha
name = <second_answ>
number_key = <-1>
number_id = <-1>
first symbol = <=> is alpha
name = <=>
<=> is keyword
number_key = <11>

first symbol = <(> is alpha
name = <(>
<(> is keyword
number_key = <17>

first symbol = <(> is alpha
name = <(>
<(> is keyword
number_key = <17>

first symbol = '0' is number
number is <0>

first symbol = <s> is alpha
name = <subtract>
<subtract> is keyword
number_key = <2>

first symbol = '1' is number
number is <1>

first symbol = <)> is alpha
name = <)>
<)> is keyword
number_key = <18>

first symbol = <m> is alpha
name = <multiply>
<multiply> is keyword
number_key = <4>

first symbol = <b> is alpha
name = <b>
number_key = <-1>
<b> is identificator
number_id = <1>
first symbol = <a> is alpha
name = <add>
<add> is keyword
number_key = <0>

first symbol = <s> is alpha
name = <sqrt>
<sqrt> is keyword
number_key = <24>

first symbol = <(> is alpha
name = <(>
<(> is keyword
number_key = <17>

first symbol = <D> is alpha
name = <Discriminant>
number_key = <-1>
<Discriminant> is identificator
number_id = <4>
first symbol = <)> is alpha
name = <)>
<)> is keyword
number_key = <18>

first symbol = <)> is alpha
name = <)>
<)> is keyword
number_key = <18>

first symbol = <d> is alpha
name = <divide>
<divide> is keyword
number_key = <6>

first symbol = <(> is alpha
name = <(>
<(> is keyword
number_key = <17>

first symbol = '2' is number
number is <2>

first symbol = <m> is alpha
name = <multiply>
<multiply> is keyword
number_key = <4>

first symbol = <a> is alpha
name = <a>
number_key = <-1>
<a> is identificator
number_id = <0>
first symbol = <)> is alpha
name = <)>
<)> is keyword
number_key = <18>

first symbol = <n> is alpha
name = <next>
<next> is keyword
number_key = <8>

first symbol = <n> is alpha
name = <ntimes>
number_key = <-1>
<ntimes> is identificator
number_id = <3>
first symbol = <=> is alpha
name = <=>
<=> is keyword
number_key = <11>

first symbol = <n> is alpha
name = <ntimes>
number_key = <-1>
<ntimes> is identificator
number_id = <3>
first symbol = <-> is alpha
name = <->
<-> is keyword
number_key = <3>

first symbol = '1' is number
number is <1>

first symbol = <n> is alpha
name = <next>
<next> is keyword
number_key = <8>

first symbol = <}> is alpha
name = <}>
<}> is keyword
number_key = <20>

first symbol = <n> is alpha
name = <next>
<next> is keyword
number_key = <8>

first symbol = <t> is alpha
name = <then_commit_seppuku>
<then_commit_seppuku> is keyword
number_key = <14>

----------------------------------------------------------------
Dump Tokens:
ID a
OP =
NUM 7
OP ;
ID b
OP =
NUM 12
OP ;
ID c
OP =
NUM 4
OP ;
ID ntimes
OP =
NUM 1e+08
OP ;
OP while
OP (
ID ntimes
OP >
NUM 1
OP )
OP {
ID Discriminant
OP =
ID b
OP *
ID b
OP -
NUM 4
OP *
ID a
OP *
ID c
OP ;
ID first_answ
OP =
OP (
OP (
NUM 0
OP -
NUM 1
OP )
OP *
ID b
OP -
OP sqrt
OP (
ID Discriminant
OP )
OP )
OP /
OP (
NUM 2
OP *
ID a
OP )
OP ;
ID second_answ
OP =
OP (
OP (
NUM 0
OP -
NUM 1
OP )
OP *
ID b
OP +
OP sqrt
OP (
ID Discriminant
OP )
OP )
OP /
OP (
NUM 2
OP *
ID a
OP )
OP ;
ID ntimes
OP =
ID ntimes
OP -
NUM 1
OP ;
OP }
OP ;
OP $
Tokenizer completed!

